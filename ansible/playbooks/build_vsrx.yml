---
 - name: deploy openstack vsrx
   hosts: localhost
   connection: local
   gather_facts: no
   tasks:
   - name: create vsrx config
     template: src=../templates/config.j2 dest=../templates/base_config.j2

   - name: deploy vsrx instance
     os_server:
       state: present
       name: "{{ srx_hostname }}{{rev}}"
       wait: yes
       availability_zone: nova
       image: "{{ image_name }}"
       flavor: "{{ flavor_name }}"
       security_groups: default
       nics:
         - net-name: "{{mgmnt_network}}"
         - net-name: "{{left_network}}"
         - net-name: "{{right_network}}"
       userdata: "{{lookup('file','../templates/base_config.j2')| string}}"
     environment:
        OS_USERNAME: "{{OSUSERNAME}}"
        OS_PASSWORD: "{{OSPASSWORD}}"
        OS_AUTH_URL: "{{OSAUTHURL}}"
        OS_PROJECT_NAME: "{{OSPROJECTNAME}}"
     register: vm

   - name: get info about the networks
     os_networks_facts:
       filters:
         name: "{{mgmnt_network}}"
     environment:
        OS_USERNAME: "{{OSUSERNAME}}"
        OS_PASSWORD: "{{OSPASSWORD}}"
        OS_AUTH_URL: "{{OSAUTHURL}}"
        OS_PROJECT_NAME: "{{OSPROJECTNAME}}"

   - name: get port facts
     os_port_facts:
       filters:
         device_id: "{{vm.openstack.id}}"
         network_id: "{{openstack_networks[0].id}}"
     environment:
        OS_USERNAME: "{{OSUSERNAME}}"
        OS_PASSWORD: "{{OSPASSWORD}}"
        OS_AUTH_URL: "{{OSAUTHURL}}"
        OS_PROJECT_NAME: "{{OSPROJECTNAME}}"

   - name: download MechID SSH public key
     get_url: dest=~/tmp/id_rsa.pub.{{rev}} url={{mechid_publickey_url}}

   - name: wait unstill srx boots
     wait_for:
       port: 22
       host: "{{openstack_ports[0].fixed_ips[0].ip_address}}"
       delay: 60
       timeout: 480

   - name: add ip to inventory
     add_host:
       name: "{{openstack_ports[0].fixed_ips[0].ip_address}}"
       groups: srx_vm


# - name: create user and ssh key for srx access
#   hosts: jenkins
#   gather_facts: no
#   tasks:
#   - name: create vsrx user and ssh key
#     user:
#       name: "{{mechid}}"
#       state: present
#       generate_ssh_key: yes
#       ssh_key_bits: 2048
#       ssh_key_file: .ssh/id_rsa


 - name: configuration of new user admin on the srx
   hosts: srx_vm
   gather_facts: no
   tasks:

   - name: create admin user with ssh key
     junos_user:
       name: "{{mechid}}"
       full_name: "Ansible and Automation MechID"
       role: super-user
       sshkey: "{{ lookup('file', '~/tmp/id_rsa.pub.' + rev) }}"
       state: present
       provider:
         host: "{{ groups['srx_vm'] |to_json | regex_search ('\\d[0-9]*.\\d[0-9]*.\\d[0-9]*.\\d[0-9]*')}}"
         username: "{{srx_user}}"
         password: "{{srx_pass}}"

 - name: stop VSRX compute instance
   hosts: localhost
   connection: local
   gather_facts: no
   tasks:
   - name: Stop vSRX instance
     os_server_actions:
       action: stop
       server: "{{srx_hostname}}{{rev}}"
     environment:
        OS_USERNAME: "{{OSUSERNAME}}"
        OS_PASSWORD: "{{OSPASSWORD}}"
        OS_AUTH_URL: "{{OSAUTHURL}}"
        OS_PROJECT_NAME: "{{OSPROJECTNAME}}"

   - name: create snapshot
     command: openstack server image create --name "{{srx_hostname}}{{rev}}-image" "{{srx_hostname}}{{rev}}"
     environment:
        OS_USERNAME: "{{OSUSERNAME}}"
        OS_PASSWORD: "{{OSPASSWORD}}"
        OS_AUTH_URL: "{{OSAUTHURL}}"
        OS_PROJECT_NAME: "{{OSPROJECTNAME}}"
     tags:
     - skip_ansible_lint

#   - name: delete vSRX instance
#     os_server:
#       state: absent
#       name: "{{ srx_hostname }}{{rev}}"
#       wait: yes
#     environment:
#        OS_USERNAME: "{{OSUSERNAME}}"
#        OS_PASSWORD: "{{OSPASSWORD}}"
#        OS_AUTH_URL: "{{OSAUTHURL}}"
#        OS_PROJECT_NAME: "{{OSPROJECTNAME}}"
